{
    "HTML Special Chars": {
        "prefix": "phphtmlspecialchars",
        "body": [
            "htmlspecialchars(${1:$var}, ENT_QUOTES, 'UTF-8')"
        ],
        "description": "HTML Special Chars with ENT_QUOTES param"
    },
    "Enable PHP Debug": {
        "prefix": "phpenabledebug",
        "body": [
            "ini_set('display_errors', 'On');",
            "error_reporting(E_ALL);"
        ],
        "description": "Enable Debug PHP"
    },
    "PHP Debug": {
        "prefix": "phpdebug",
        "body": [
            "echo '<pre>';",
            "print_r(${1:\\$var});",
            "echo '</pre>';",
            "exit;"
        ],
        "description": "Debug PHP"
    },
    "PHP Get URI": {
        "prefix": "phpuri",
        "body": [
            "\\$whatINeed = explode(\"/\", \\$_SERVER[\"REQUEST_URI\"])[1];"
        ],
        "description": "Get current URI"
    },
    "PHP Get URL": {
        "prefix": "phpurl",
        "body": [
            "\\$url = (isset(\\$_SERVER['HTTPS']) && \\$_SERVER['HTTPS'] === 'on' ? \"https\" : \"http\") . \"://\" . \\$_SERVER['HTTP_HOST'];"
        ],
        "description": "Get current URL"
    },
    "PHP strpos()": {
        "prefix": "phpstrpos",
        "body": [
            "$frase = 'Eu não sei PHP';",
            "$pesquisa = 'sei PHP'",
            "if (strpos($frase, $pesquisa) === true) {",
            "\t// Código caso encontre...",
            "}"
        ],
        "description": "Check if string contains some word"
    },
    "PHP PDO Fetch While": {
        "prefix": "phpwhile",
        "body": [
            "$stmt = $this->conn->prepare('SELECT * FROM books');",
            "$stmt->execute();",
            "$array = [];",
            "",
            "while($row = $stmt->fetch(PDO::FETCH_ASSOC))",
            "{",
            "    $array[] = ['id' => $row['id'], 'name' => $row['name']];",
            "}",
            "return $array;"
        ],
        "description": "PHP While Fetch"
    },
	"Composer Skeleton": {
		"prefix": "composerskel",
		"body": [
                    "{",
                    "    \"name\": \"${1:vendor}/${2:package}\",",
                    "    \"type\": \"project\",", 
                    "    \"description\": \"${3:package_description}\",",
                    "    \"keywords\": [",
                    "        \"${1:vendor}\",",
                    "        \"${2:package}\"",
                    "    ],",
                    "    \"homepage\": \"https://github.com/${1:vendor}/${2:package}\",",
                    "    \"license\": \"MIT\",",
                    "    \"authors\": [",
                    "        {",
                    "            \"name\": \"${4:Lucas Saliés Brum}\",",
                    "            \"email\": \"${5:lucas@archlinux.com.br}\",",
                    "            \"homepage\": \"${6:https://www.lucasbrum.net}\",",
                    "            \"role\": \"${7:Developer}\"",
                    "        }",
                    "    ],",
                    "    \"require\": {",
                    "        \"php\" : \"~7.2\"",
                    "    },",
                    "    \"require-dev\": {",
                    "        \"phpunit/phpunit\" : \">=8.0\",",
                    "        \"squizlabs/php_codesniffer\": \"^3.0\"",
                    "    },",
                    "    \"autoload\": {",
                    "        \"psr-4\": {",
                    "            \"${1:vendor}\\\\\\\\${2:package}\\\\\\\": \"src/\"",
                    "        }",
                    "    },",
                    "    \"autoload-dev\": {",
                    "        \"psr-4\": {",
                    "            \"${1:vendor}\\\\\\\\${2:package}\\\\\\\": \"tests/\"",
                    "        }",
                    "    },",
                    "    \"scripts\": {",
                    "        \"test\": \"phpunit\",",
                    "        \"check-style\": \"phpcs src tests\",",
                    "        \"fix-style\": \"phpcbf src tests\"",
                    "    },",
                    "    \"extra\": {",
                    "        \"branch-alias\": {",
                    "            \"dev-master\": \"1.0-dev\"",
                    "        }",
                    "    },",
                    "    \"config\": {",
                    "        \"sort-packages\": true",
                    "    }",
                    "}"
		],
		"description": "composer.json skeleton"
	},
    "PHP Constructor": {
        "prefix": "phpconstructor",
        "body": [
            "private $${1:attr}",
            "",
            "public function __construct($${1:attr})",
            "{",
            "\t$this->${1:attr} = $${1:attr};",
            "}"
        ],
        "description": "Create Constructor Class"
    },
}